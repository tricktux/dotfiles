# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  networking.hostName = "aero";
  # Bootloader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;
  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/80014395-1bb3-4966-a7fc-86aadd6f941f";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-f6d999d7-6bdf-4002-951c-9dfbd49ab4cb".device = "/dev/disk/by-uuid/f6d999d7-6bdf-4002-951c-9dfbd49ab4cb";

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/5E97-2467";
      fsType = "vfat";
    };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/762d38c2-cfb9-40e0-8195-3290e70027c6"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}

#!/usr/bin/env luajit

-- TODO: Very obsolete usage
local _usage = [[
Usage:
  xdotool_launch <name> <arguments to $TERMINAL>
  <name>    : name the window has
  <arguments to $TERMINAL>: Will use $TERMINAL application
  E.g.:  xdotool_launch ranger /usr/bin/ranger
]]

local apps = {}
-- Default values
apps.i3cmd = [[scratchpad show, move position center]]

-- NOTE: Also add it to i3/config
apps["ranger"] = {
  -- Expression to find this window
  --  Used by i3ipc
  regex = '[title=\\"^ranger-scratchpad$\\" class=\\"^kitty$\\"]',
  -- Command to execute for this window
  i3cmd = "scratchpad show, resize set 80ppt 60ppt, move position center",
  -- How to start this application if it does not exists
  exec = [[$TERMINAL --title ranger-scratchpad ranger --cmd="set viewmode multipane" --cmd="set column_ratios 1,1" --cmd="tab_new"&]],
}

apps["scratch"] = {
  -- Expression to find this window
  --  Used by i3ipc
  regex = '[title=\\"^scratch$\\" class=\\"^kitty$\\"]',
  -- Command to execute for this window
  i3cmd = "scratchpad show, resize set 80ppt 60ppt, move position center",
  -- How to start this application if it does not exists
  exec = [[$TERMINAL --title scratch $HOME/.config/kitty/scratch.sh&]],
}

apps["doublecmd"] = {
  -- Expression to find this window
  --  Used by i3ipc
  regex = '[class=\\"^doublecmd$\\" title=\\".*Double Commander.*\\"]',
  -- Command to execute for this window
  i3cmd = "scratchpad show, resize set 80ppt 60ppt, move position center",
  -- How to start this application if it does not exists
  exec = [[doublecmd&]],
}

apps["journal"] = {
  -- Expression to find this window
  --  Used by i3ipc
  regex = '[title=\\"^journal$\\" class=\\"^kitty$\\"]',
  -- How to start this application if it does not exists
  exec = [[$TERMINAL --title journal $HOME/.config/i3/scripts/journal.sh&]],
}

apps["neomutt"] = {
  -- Expression to find this window
  --  Used by i3ipc
  regex = '[title=\\"^neomutt$\\" class=\\"^kitty$\\"]',
  -- Command to execute for this window
  i3cmd = "scratchpad show, resize set 80ppt 60ppt, move position center",
  -- How to start this application if it does not exists
  exec = [[$TERMINAL --title neomutt $HOME/.config/kitty/neomutt.sh&]],
}

apps["evolution"] = {
  -- Expression to find this window
  --  Used by i3ipc
  regex = '[title=\\".*Evolution$\\" class=\\"^Evolution$\\"]',
  -- Command to execute for this window
  i3cmd = "scratchpad show, resize set 80ppt 60ppt, move position center",
  -- How to start this application if it does not exists
  exec = [[evolution&]],
}

apps["terminal"] = {
  -- Expression to find this window
  --  Used by i3ipc
  regex = '[title=\\"^terminal$\\" class=\\"^kitty$\\"]',
  -- Command to execute for this window
  i3cmd = "scratchpad show, resize set 100ppt 40ppt, move position 0px 2ppt",
  -- How to start this application if it does not exists
  exec = [[$TERMINAL --title terminal -o background_opacity=0.75&]],
}

apps["bottom"] = {
  -- Expression to find this window
  --  Used by i3ipc
  regex = '[title=\\"^bottom$\\" class=\\"^kitty$\\"]',
  -- Command to execute for this window
  i3cmd = "scratchpad show, resize set 80ppt 60ppt, move position center",
  -- How to start this application if it does not exists
  exec = [[$TERMINAL --title bottom btm&]],
}

apps["spotify"] = {
  -- Expression to find this window
  --  Used by i3ipc
  regex = '[title=\\"^Spotify$\\" class=\\"^Spotify$\\"]',
  -- Command to execute for this window
  i3cmd = "scratchpad show, resize set 80ppt 60ppt, move position center",
  -- How to start this application if it does not exists
  exec = [[spotify&]],
}

apps["tickrs"] = {
  -- Expression to find this window
  --  Used by i3ipc
  regex = '[title=\\"^tickrs$\\" class=\\"^kitty$\\"]',
  -- Command to execute for this window
  i3cmd = "scratchpad show, resize set 80ppt 80ppt, move position center",
  -- How to start this application if it does not exists
  exec = [[$TERMINAL --title tickrs tickrs&]],
}

apps["whatsapp"] = {
  -- Expression to find this window
  --  Used by i3ipc
  regex = '[con_mark=\\"msgs\\"]',
  -- Command to execute for this window
  i3cmd = "scratchpad show, resize set 80ppt 60ppt, move position center",
  -- How to start this application if it does not exists
  exec = [[firefox https://web.whatsapp.com https://messages.google.com/web&]],
}

apps["ncpamixer"] = {
  -- Expression to find this window
  --  Used by i3ipc
  regex = '[title=\\"^ncpamixer$\\" class=\\"^kitty$\\"]',
  -- Command to execute for this window
  i3cmd = "scratchpad show, resize set 80ppt 60ppt, move position center",
  -- How to start this application if it does not exists
  exec = [[$TERMINAL --title ncpamixer ncpamixer -t c&]],
}

apps["qalculate"] = {
  -- Expression to find this window
  --  Used by i3ipc
  regex = '[class=\\"^qalculate-qt$\\"]',
  -- Command to execute for this window
  i3cmd = "scratchpad show, resize set 50ppt 60ppt, move position center",
  -- How to start this application if it does not exists
  exec = [[qalculate-qt&]],
}

local function __check_args()
  if not arg[1] or arg[1] == "" or arg[1] == nil then
    print(_usage)
    return -1
  end

  if arg[1] == "-h" or arg[1] == "--help" then
    print(_usage)
    return -2
  end

  if apps[ arg[1] ] == nil then
    print(_usage)
    return -3
  end

  return 0
end

local function __exec(cmd)
  cmd = cmd .. " 2>&1"
  local file, err = io.popen(cmd)
  if file == nil then
    print("Command " .. cmd .. " failed")
    print("\t" .. err)
    return ""
  end
  local output = file:read("*all")
  file:close()
  return output
end

local i3ipc = {}
i3ipc.cmd = [[i3-msg]]

-- app: One of the apps tables
function i3ipc:show(app)
  if app == nil then
    print("ERROR: Empty app instance")
    return true
  end
  -- Format i3-msg command
  local i3cmd = app.i3cmd or apps.i3cmd
  local cmd = string.format('%s "%s %s"', self.cmd, app.regex, i3cmd)
  print(cmd)
  local rc = __exec(cmd)
  if string.find(rc, "ERROR:") ~= nil then
    return false
  end

  return true
end

local function __msg(content)
  os.execute("notify-send 'i3show' '" .. content .. "' -u critical")
end

local function main()
  if __check_args() ~= 0 then
    return
  end

  local app = arg[1]

  -- It will also hide the window if shown
  if i3ipc:show(apps[app]) == true then
    return
  end

  print("Window " .. app .. " does not exists waiting...")
  os.execute(apps[app].exec)
  -- Wait ~8 seconds for app to start
  for _ = 1, 80 do
    if i3ipc:show(apps[app]) == true then
      return
    end
    os.execute("sleep 0.1")
  end
  __msg(string.format('App did not start: "%s"', app))
end

main()
